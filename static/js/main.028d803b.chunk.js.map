{"version":3,"sources":["components/Clock.tsx","App.tsx","index.tsx"],"names":["getRandomName","value","Math","random","toString","slice","Clock","state","date","clockName","timerid","timerNameid","this","setInterval","setState","Date","toLocaleTimeString","console","log","_PrevProps","PrevState","clearInterval","className","React","Component","App","hasClock","type","onContextMenu","onClick","ReactDOM","render","document","getElementById"],"mappings":"sNAEA,SAASA,IACP,IAAMC,EAAQC,KAAKC,SAASC,WAAWC,MAAM,EAAG,GAEhD,MAAM,SAAN,OAAgBJ,GAQX,IAAMK,EAAb,4MACEC,MAAe,CACbC,KAAM,GACNC,UAAWT,KAHf,EAMEU,aANF,IAQEC,iBARF,yDAUE,WAAqB,IAAD,OAClBC,KAAKF,QAAUG,aAAY,WACzB,EAAKC,SAAS,CAAEN,MAAM,IAAIO,MAAOC,uBAGjCC,QAAQC,KAAI,IAAIH,MAAOC,wBACtB,KAEHJ,KAAKD,YAAcE,aAAY,WAC7B,EAAKC,SAAS,CAAEL,UAAWT,QAC1B,QApBP,iCAwBE,SAAoBmB,EAAiBC,GAC/BA,EAAUX,YAAcG,KAAKL,MAAME,WAErCQ,QAAQC,IAAR,uBAA4BE,EAAUX,UAAtC,eAAsDG,KAAKL,MAAME,cA3BvE,kCA+BE,WACMG,KAAKF,SACPW,cAAcT,KAAKF,SAGjBE,KAAKD,aACPU,cAAcT,KAAKD,eArCzB,oBAyCE,WACE,MAA4BC,KAAKL,MAAzBE,EAAR,EAAQA,UAAWD,EAAnB,EAAmBA,KAEnB,OACE,sBAAKc,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGb,IAGF,YAED,sBAAMa,UAAU,cAAhB,SACGd,WArDX,GAA2Be,IAAMC,WCLpBC,EAAb,4MACElB,MAAQ,CACNmB,UAAU,GAFd,4CAKE,WAAU,IAAD,OACCA,EAAad,KAAKL,MAAlBmB,SAER,OACE,sBAAKJ,UAAU,MAAf,UACE,6CAECI,GACE,cAAC,EAAD,IACH,wBACEC,KAAK,SACLC,cAAe,WACb,EAAKd,SAAS,CAAEY,UAAU,KAE5BG,QAAS,WACP,EAAKf,SAAS,CAAEY,UAAU,KAN9B,6BAdR,GAAyBH,IAAMC,WCL/BM,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.028d803b.chunk.js","sourcesContent":["import React from 'react';\n\nfunction getRandomName(): string {\n  const value = Math.random().toString().slice(2, 6);\n\n  return `Clock-${value}`;\n}\n\n  type State = {\n    date: string,\n    clockName: string,\n  };\n\nexport class Clock extends React.Component<{}, State> {\n  state: State = {\n    date: '',\n    clockName: getRandomName(),\n  };\n\n  timerid?: NodeJS.Timer;\n\n  timerNameid?: NodeJS.Timer;\n\n  componentDidMount() {\n    this.timerid = setInterval(() => {\n      this.setState({ date: new Date().toLocaleTimeString() });\n\n      // eslint-disable-next-line no-console\n      console.log(new Date().toLocaleTimeString());\n    }, 1000);\n\n    this.timerNameid = setInterval(() => {\n      this.setState({ clockName: getRandomName() });\n    }, 3300);\n  }\n\n  // eslint-disable-next-line react/no-deprecated\n  componentWillUpdate(_PrevProps: any, PrevState: State) {\n    if (PrevState.clockName !== this.state.clockName) {\n      // eslint-disable-next-line no-console\n      console.log(`Renamed from ${PrevState.clockName} to ${this.state.clockName}`);\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.timerid) {\n      clearInterval(this.timerid);\n    }\n\n    if (this.timerNameid) {\n      clearInterval(this.timerNameid);\n    }\n  }\n\n  render() {\n    const { clockName, date } = this.state;\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {clockName}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {date}\n        </span>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Clock } from './components/Clock';\n\ntype State = {\n  hasClock: boolean,\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    hasClock: true,\n  };\n\n  render() {\n    const { hasClock } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n\n        {hasClock\n        && <Clock />}\n        <button\n          type=\"button\"\n          onContextMenu={() => {\n            this.setState({ hasClock: false });\n          }}\n          onClick={() => {\n            this.setState({ hasClock: true });\n          }}\n        >\n          switcher\n        </button>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}